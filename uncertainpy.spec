#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
Name     : uncertainpy
Version  : 1.2.3
Release  : 2
URL      : https://files.pythonhosted.org/packages/61/20/ccf36800a17b545e48bcd0845aebea3f46936091a90f38f46e462255e976/uncertainpy-1.2.3.tar.gz
Source0  : https://files.pythonhosted.org/packages/61/20/ccf36800a17b545e48bcd0845aebea3f46936091a90f38f46e462255e976/uncertainpy-1.2.3.tar.gz
Summary  : A python toolbox for uncertainty quantification and sensitivity analysis tailored towards neuroscience models.
Group    : Development/Tools
License  : GPL-3.0
Requires: uncertainpy-license = %{version}-%{release}
Requires: uncertainpy-python = %{version}-%{release}
Requires: uncertainpy-python3 = %{version}-%{release}
BuildRequires : buildreq-distutils3
BuildRequires : pypi(chaospy)
BuildRequires : pypi(exdir)
BuildRequires : pypi(h5py)
BuildRequires : pypi(matplotlib)
BuildRequires : pypi(multiprocess)
BuildRequires : pypi(numpy)
BuildRequires : pypi(ruamel.yaml)
BuildRequires : pypi(salib)
BuildRequires : pypi(scipy)
BuildRequires : pypi(seaborn)
BuildRequires : pypi(six)
BuildRequires : pypi(tqdm)
BuildRequires : pypi(xvfbwrapper)

%description
analysis tailored towards computational neuroscience.
        
        Uncertainpy is model independent and treats the model as a black box where the
        model can be left unchanged. Uncertainpy implements both quasi-Monte Carlo
        methods and polynomial chaos expansions using either point collocation or the
        pseudo-spectral method. Both of the polynomial chaos expansion methods have
        support for the rosenblatt transformation to handle dependent input parameters.
        
        Uncertainpy is feature based, i.e., if applicable, it recognizes and calculates
        the uncertainty in features of the model, as well as the model itself.
        Examples of features in neuroscience can be spike timing and the action
        potential shape.
        
        Uncertainpy is tailored towards neuroscience models, and comes with several
        common neuroscience models and features built in, but new models and features can
        easily be implemented. It should be noted that while Uncertainpy is tailored
        towards neuroscience, the implemented methods are general, and Uncertainpy can
        be used for many other types of models and features within other fields.

%package license
Summary: license components for the uncertainpy package.
Group: Default

%description license
license components for the uncertainpy package.


%package python
Summary: python components for the uncertainpy package.
Group: Default
Requires: uncertainpy-python3 = %{version}-%{release}

%description python
python components for the uncertainpy package.


%package python3
Summary: python3 components for the uncertainpy package.
Group: Default
Requires: python3-core
Provides: pypi(uncertainpy)
Requires: pypi(chaospy)
Requires: pypi(exdir)
Requires: pypi(h5py)
Requires: pypi(matplotlib)
Requires: pypi(multiprocess)
Requires: pypi(numpy)
Requires: pypi(ruamel.yaml)
Requires: pypi(salib)
Requires: pypi(scipy)
Requires: pypi(seaborn)
Requires: pypi(six)
Requires: pypi(tqdm)
Requires: pypi(xvfbwrapper)

%description python3
python3 components for the uncertainpy package.


%prep
%setup -q -n uncertainpy-1.2.3
cd %{_builddir}/uncertainpy-1.2.3

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1638316709
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
export CFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=auto "
export FCFLAGS="$FFLAGS -O3 -ffat-lto-objects -flto=auto "
export FFLAGS="$FFLAGS -O3 -ffat-lto-objects -flto=auto "
export CXXFLAGS="$CXXFLAGS -O3 -ffat-lto-objects -flto=auto "
export MAKEFLAGS=%{?_smp_mflags}
python3 setup.py build

%install
export MAKEFLAGS=%{?_smp_mflags}
rm -rf %{buildroot}
mkdir -p %{buildroot}/usr/share/package-licenses/uncertainpy
cp %{_builddir}/uncertainpy-1.2.3/LICENSE.txt %{buildroot}/usr/share/package-licenses/uncertainpy/e72b9f01cc09543c4f8209395c24f128f70bac2f
python3 -tt setup.py build  install --root=%{buildroot}
echo ----[ mark ]----
cat %{buildroot}/usr/lib/python3*/site-packages/*/requires.txt || :
echo ----[ mark ]----

%files
%defattr(-,root,root,-)

%files license
%defattr(0644,root,root,0755)
/usr/share/package-licenses/uncertainpy/e72b9f01cc09543c4f8209395c24f128f70bac2f

%files python
%defattr(-,root,root,-)

%files python3
%defattr(-,root,root,-)
/usr/lib/python3*/*
